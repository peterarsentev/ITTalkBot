package ru.job4j.it.talk.service.ui;

import lombok.AllArgsConstructor;
import org.springframework.stereotype.Service;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.KeyboardRow;
import ru.job4j.it.talk.dto.Question;
import ru.job4j.it.talk.service.job4j.QuestionService;
import ru.job4j.it.talk.service.job4j.TopicService;

import java.util.ArrayList;
import java.util.List;

@Service
@AllArgsConstructor
public class TgButtons {
    private final TopicService topicService;
    private final QuestionService questionService;

    public List<List<InlineKeyboardButton>> topics(int page) {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        var topics = topicService.findByPage(page);
        for (var topic : topics.getTopics()) {
            keyboard.add(List.of(createBtn(topic.getName(), "topic_" + topic.getId())));
        }
        var btn = new ArrayList<InlineKeyboardButton>();
        btn.add(createBtn("‚Ü©Ô∏è –°–∫—Ä—ã—Ç—å", "hide"));
        if (topics.getPage() > 0) {
            btn.add(createBtn("\u2B05Ô∏è –ù–∞–∑–∞–¥", "navigate_topic_" + (topics.getPage() - 1)));
        }
        if (topics.getPage() + 1 <= topics.getTotal()) {
            btn.add(createBtn("\u27A1Ô∏è –í–ø–µ—Ä–µ–¥", "navigate_topic_" + (topics.getPage() + 1)));
        }
        keyboard.add(btn);
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> questionsByTopicId(int topicId, int page) {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        var questions = questionService.findByPage(topicId, page);
        var index = page * 10 + 1;
        for (var question : questions.getQuestions()) {
            keyboard.add(List.of(createBtn(index++ + ". " + question.getQuestionTitle(),
                    "question_" + question.getQuestionId())));
        }
        var btn = new ArrayList<InlineKeyboardButton>();
        btn.add(createBtn("‚Ü©Ô∏è –°–∫—Ä—ã—Ç—å", "hide"));
        if (questions.getPage() > 0) {
            btn.add(createBtn("\u2B05Ô∏è –ù–∞–∑–∞–¥",
                    "navigate_questions_" + topicId + "_" + (questions.getPage() - 1)));
        }
        if (questions.getPage() + 1 <= questions.getTotal()) {
            btn.add(createBtn("\u27A1Ô∏è –í–ø–µ—Ä–µ–¥",
                    "navigate_questions_" + topicId + "_" + (questions.getPage() + 1)));
        }
        keyboard.add(btn);
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> levels() {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(createBtn("A1 - –ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å", "set_level_A1"))); // Beginner level
        keyboard.add(List.of(createBtn("A2 - –≠–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å", "set_level_A2"))); // A2 indicating progress
        keyboard.add(List.of(createBtn("B1 - –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å", "set_level_B1"))); // B1 for intermediate
        keyboard.add(List.of(createBtn("B2 - –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å", "set_level_B2"))); // B2 for advanced intermediate
        keyboard.add(List.of(createBtn("C1 - –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å", "set_level_C1"))); // C1 representing proficiency
        keyboard.addAll(hide());
        return keyboard;
    }

    public List<KeyboardRow> menu() {
        List<KeyboardRow> keyboard = new ArrayList<>();
        KeyboardRow row1 = new KeyboardRow();
        row1.add(new KeyboardButton("üí¨ –¢–µ–º—ã"));
        row1.add(new KeyboardButton("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ"));
        row1.add(new KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"));
        keyboard.add(row1);
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> settings() {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(createBtn("üåê –ò–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫", "target_lang")));
        keyboard.add(List.of(createBtn("üìä –£—Ä–æ–≤–µ–Ω—å —è–∑—ã–∫–∞", "level_lang")));
        keyboard.add(List.of(createBtn("üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", "support")));
        keyboard.addAll(hide());
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> translate() {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(createBtn("\uD83D\uDCDD –ü–µ—Ä–µ–≤–µ—Å—Ç–∏", "translate")));
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> learn(Long topicId, Long questionId,
                                                  Integer previousId, Integer nextId) {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        var btn = new ArrayList<InlineKeyboardButton>();
        btn.add(createBtn("üìå –¢–µ–º–∞", "topic_" + topicId));
        btn.add(createBtn("üéì –ò–∑—É—á–∏—Ç—å", "learn_question_" + questionId));
        if (previousId != null) {
            btn.add(createBtn("‚¨Ö", "navigate_question_" + previousId));
        }
        if (nextId != null) {
            btn.add(createBtn("‚û°", "navigate_question_" + nextId));
        }
        keyboard.add(btn);
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> answerNavigate(Long topicId,
                                                  Integer previousId, Integer nextId) {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        var btn = new ArrayList<InlineKeyboardButton>();
        btn.add(createBtn("üìå –¢–µ–º–∞", "topic_" + topicId));
        if (previousId != null) {
            btn.add(createBtn("‚¨Ö", "after_answer_question_" + previousId));
        }
        if (nextId != null) {
            btn.add(createBtn("‚û°", "after_answer_question_" + nextId));
        }
        keyboard.add(btn);
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> hintAndTranslate() {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(createBtn("\uD83D\uDCA1 –ü–æ–¥—Å–∫–∞–∑–∫–∞", "hint"),
                createBtn("\uD83D\uDCDD –ü–µ—Ä–µ–≤–µ—Å—Ç–∏", "translate")));
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> hide() {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(createBtn("\uD83D\uDCDD –°–∫—Ä—ã—Ç—å", "hide")));
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> navigate(Long topicId, int page) {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(
                createBtn("\uD83D\uDCCC –ö —Ç–µ–º–∞–º", "topics"), // –ò–∫–æ–Ω–∫–∞ –¥–ª—è "–ö —Ç–µ–º–∞–º"
                createBtn("\u2B05Ô∏è –ù–∞–∑–∞–¥", "back"),           // –ò–∫–æ–Ω–∫–∞ –¥–ª—è "–ù–∞–∑–∞–¥"
                createBtn("\u27A1Ô∏è –í–ø–µ—Ä–µ–¥", "forward")        // –ò–∫–æ–Ω–∫–∞ –¥–ª—è "–í–ø–µ—Ä–µ–¥"
        ));
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> recommendationAndTranslation() {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(createBtn("\uD83E\uDDD0 –ü—Ä–æ–≤–µ—Ä–∏—Ç—å", "recommendation"),
                createBtn("\uD83D\uDCDD –ü–µ—Ä–µ–≤–µ—Å—Ç–∏", "translate")));
        return keyboard;
    }

    public List<List<InlineKeyboardButton>> situations() {
        List<List<InlineKeyboardButton>> keyboard = new ArrayList<>();
        keyboard.add(List.of(
                createBtn("\uD83C\uDFEB –®–∫–æ–ª–∞", "situation_school"),
                createBtn("\uD83C\uDF93 –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç", "situation_university")
        ));
        keyboard.add(List.of(
                createBtn("\uD83C\uDFE5 –ë–æ–ª—å–Ω–∏—Ü–∞", "situation_hospital"),
                createBtn("\uD83C\uDFC0 –°—Ç–∞–¥–∏–æ–Ω", "situation_stadium")
        ));
        keyboard.add(List.of(
                createBtn("\uD83C\uDFD6 –ü–∞—Ä–∫", "situation_park"),
                createBtn("\uD83C\uDFD7 –†—ã–Ω–æ–∫", "situation_market")
        ));
        keyboard.add(List.of(
                createBtn("\uD83C\uDFE6 –ú–∞–≥–∞–∑–∏–Ω", "situation_shop"),
                createBtn("\uD83C\uDFD6 –ö–∞—Ñ–µ", "situation_cafe")
        ));
        keyboard.add(List.of(
                createBtn("\uD83C\uDF73 –†–µ—Å—Ç–æ—Ä–∞–Ω", "situation_restaurant"),
                createBtn("\uD83C\uDFAC –ö–∏–Ω–æ—Ç–µ–∞—Ç—Ä", "situation_cinema")
        ));
        keyboard.add(List.of(
                createBtn("\uD83C\uDFA4 –¢–µ–∞—Ç—Ä", "situation_theater"),
                createBtn("\uD83D\uDCD6 –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞", "situation_library")
        ));
        keyboard.add(List.of(
                createBtn("\uD83C\uDFAE –ú—É–∑–µ–π", "situation_museum"),
                createBtn("\uD83D\uDEEC –ê—ç—Ä–æ–ø–æ—Ä—Ç", "situation_airport")
        ));
        keyboard.add(List.of(
                createBtn("\uD83D\uDE80 –ñ–µ–ª–µ–∑–Ω–æ–¥–æ—Ä–æ–∂–Ω—ã–π –≤–æ–∫–∑–∞–ª", "situation_train_station"),
                createBtn("\uD83D\uDE8C –ê–≤—Ç–æ–≤–æ–∫–∑–∞–ª", "situation_bus_station")
        ));
        keyboard.add(List.of(
                createBtn("\uD83D\uDCB5 –ë–∞–Ω–∫", "situation_bank"),
                createBtn("\uD83D\uDCE8 –ü–æ—á—Ç–∞", "situation_post_office")
        ));
        keyboard.add(List.of(
                createBtn("\uD83C\uDFD6 –ü–ª—è–∂", "situation_beach"),
                createBtn("\uD83C\uDFC3 –î–µ—Ç—Å–∫–∏–π —Å–∞–¥", "situation_kindergarten")
        ));
        keyboard.add(List.of(
                createBtn("\u26EA –¶–µ—Ä–∫–æ–≤—å", "situation_church"),
                createBtn("\uD83C\uDFD1 –î–≤–æ—Ä–µ—Ü —Å–ø–æ—Ä—Ç–∞", "situation_sports_palace")
        ));
        keyboard.add(List.of(
                createBtn("\uD83D\uDCC5 –ì–∞–ª–µ—Ä–µ—è", "situation_gallery"),
                createBtn("\uD83C\uDFB6 –ö–æ–Ω—Ü–µ—Ä—Ç–Ω—ã–π –∑–∞–ª", "situation_concert_hall")
        ));
        keyboard.add(List.of(
                createBtn("\uD83D\uDED2 –¢–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä", "situation_shopping_center"),
                createBtn("\uD83D\uDCAA –§–∏—Ç–Ω–µ—Å-—Ü–µ–Ω—Ç—Ä", "situation_fitness_center")
        ));
        keyboard.add(List.of(
                createBtn("\uD83D\uDC87 –°–∞–ª–æ–Ω –∫—Ä–∞—Å–æ—Ç—ã", "situation_beauty_salon"),
                createBtn("\uD83C\uF3D9 –ê–ø—Ç–µ–∫–∞", "situation_pharmacy")
        ));
        keyboard.add(List.of(
                createBtn("\uD83D\uDEA8 –ü–æ–ª–∏—Ü–∏—è", "situation_police"),
                createBtn("\uD83C\uDFF3 –ú—ç—Ä–∏—è", "situation_city_hall")
        ));
        return keyboard;
    }

    InlineKeyboardButton createBtn(String name, String data) {
        var inline = new InlineKeyboardButton();
        inline.setText(name);
        inline.setCallbackData(data);
        return inline;
    }
}

